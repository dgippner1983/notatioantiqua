.TH "hyphen.c" 3 "Tue Jun 12 2012" "Version 1.0.0.3164pre" "Notatio Antiqua" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hyphen.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'hnjalloc\&.h'\fP
.br
\fC#include 'hyphen\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fB_HashTab\fP"
.br
.ti -1c
.RI "struct \fB_HashEntry\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBnoVERBOSE\fP"
.br
.ti -1c
.RI "#define \fBnoLONG_LIGATURE\fP"
.br
.ti -1c
.RI "#define \fBLIG_xx\fP   0"
.br
.ti -1c
.RI "#define \fBLIG_xxx\fP   1"
.br
.ti -1c
.RI "#define \fBHASH_SIZE\fP   31627"
.br
.ti -1c
.RI "#define \fBMAX_WORD\fP   256"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB_HashTab\fP \fBHashTab\fP"
.br
.ti -1c
.RI "typedef struct \fB_HashEntry\fP \fBHashEntry\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBhnj_strchomp\fP (char *s)"
.br
.ti -1c
.RI "void \fBhnj_hyphen_load_line\fP (char *buf, \fBHyphenDict\fP *dict, \fBHashTab\fP *hashtab)"
.br
.ti -1c
.RI "\fBHyphenDict\fP * \fBhnj_hyphen_load\fP (const char *fn)"
.br
.ti -1c
.RI "void \fBhnj_hyphen_free\fP (\fBHyphenDict\fP *dict)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_hyphenate\fP (\fBHyphenDict\fP *dict, const char *word, int word_size, char *hyphens)"
.br
.ti -1c
.RI "int \fBhnj_ligature\fP (unsigned char c)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_strnlen\fP (const char *word, int n, int utf8)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_lhmin\fP (int utf8, const char *word, int word_size, char *hyphens, char ***rep, int **pos, int **cut, int lhmin)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_rhmin\fP (int utf8, const char *word, int word_size, char *hyphens, char ***rep, int **pos, int **cut, int rhmin)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_hyph_\fP (\fBHyphenDict\fP *dict, const char *word, int word_size, char *hyphens, char ***rep, int **pos, int **cut, int clhmin, int crhmin, int lend, int rend)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_norm\fP (const char *word, int word_size, char *hyphens, char ***rep, int **pos, int **cut)"
.br
.ti -1c
.RI "void \fBhnj_hyphen_hyphword\fP (const char *word, int l, const char *hyphens, char *hyphword, char ***rep, int **pos, int **cut)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_hyphenate2\fP (\fBHyphenDict\fP *dict, const char *word, int word_size, char *hyphens, char *hyphword, char ***rep, int **pos, int **cut)"
.br
.ti -1c
.RI "int \fBhnj_hyphen_hyphenate3\fP (\fBHyphenDict\fP *dict, const char *word, int word_size, char *hyphens, char *hyphword, char ***rep, int **pos, int **cut, int lhmin, int rhmin, int clhmin, int crhmin)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define \fBHASH_SIZE\fP   31627"
.PP
Definition at line 92 of file hyphen\&.c\&.
.SS "#define \fBLIG_xx\fP   0"
.PP
Definition at line 57 of file hyphen\&.c\&.
.SS "#define \fBLIG_xxx\fP   1"
.PP
Definition at line 58 of file hyphen\&.c\&.
.SS "#define \fBMAX_WORD\fP   256"
.PP
Definition at line 540 of file hyphen\&.c\&.
.SS "#define \fBnoLONG_LIGATURE\fP"
.PP
Definition at line 51 of file hyphen\&.c\&.
.SS "#define \fBnoVERBOSE\fP"
.PP
Definition at line 47 of file hyphen\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_HashEntry\fP \fBHashEntry\fP"
.PP
Definition at line 89 of file hyphen\&.c\&.
.SS "typedef struct \fB_HashTab\fP \fBHashTab\fP"
.PP
Definition at line 88 of file hyphen\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void \fBhnj_hyphen_free\fP (\fBHyphenDict\fP *dict)"
.PP
Definition at line 516 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_hyph_\fP (\fBHyphenDict\fP *dict, const char *word, intword_size, char *hyphens, char ***rep, int **pos, int **cut, intclhmin, intcrhmin, intlend, intrend)"
.PP
Definition at line 765 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_hyphenate\fP (\fBHyphenDict\fP *dict, const char *word, intword_size, char *hyphens)"
.PP
Definition at line 542 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_hyphenate2\fP (\fBHyphenDict\fP *dict, const char *word, intword_size, char *hyphens, char *hyphword, char ***rep, int **pos, int **cut)"
.PP
Definition at line 1114 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_hyphenate3\fP (\fBHyphenDict\fP *dict, const char *word, intword_size, char *hyphens, char *hyphword, char ***rep, int **pos, int **cut, intlhmin, intrhmin, intclhmin, intcrhmin)"
.PP
Definition at line 1149 of file hyphen\&.c\&.
.SS "void \fBhnj_hyphen_hyphword\fP (const char *word, intl, const char *hyphens, char *hyphword, char ***rep, int **pos, int **cut)"
.PP
Definition at line 1095 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_lhmin\fP (intutf8, const char *word, intword_size, char *hyphens, char ***rep, int **pos, int **cut, intlhmin)"
.PP
Definition at line 701 of file hyphen\&.c\&.
.SS "\fBHyphenDict\fP* \fBhnj_hyphen_load\fP (const char *fn)"
.PP
Definition at line 375 of file hyphen\&.c\&.
.SS "void \fBhnj_hyphen_load_line\fP (char *buf, \fBHyphenDict\fP *dict, \fBHashTab\fP *hashtab)"
.PP
Definition at line 245 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_norm\fP (const char *word, intword_size, char *hyphens, char ***rep, int **pos, int **cut)"
.PP
Definition at line 1053 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_rhmin\fP (intutf8, const char *word, intword_size, char *hyphens, char ***rep, int **pos, int **cut, intrhmin)"
.PP
Definition at line 737 of file hyphen\&.c\&.
.SS "int \fBhnj_hyphen_strnlen\fP (const char *word, intn, intutf8)"
.PP
Definition at line 686 of file hyphen\&.c\&.
.SS "int \fBhnj_ligature\fP (unsigned charc)"
.PP
Definition at line 672 of file hyphen\&.c\&.
.SS "void \fBhnj_strchomp\fP (char *s)"
.PP
Definition at line 78 of file hyphen\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Notatio Antiqua from the source code\&.
